import PropTypes from 'prop-types';
import { ReactNode } from 'react';
import { MenuProps } from '../Menu';
import { LabelKey, Option } from '../../types';
export declare type RenderMenuItemChildren = (option: Option, menuProps: TypeaheadMenuProps, idx: number) => JSX.Element;
export interface TypeaheadMenuProps extends MenuProps {
    labelKey: LabelKey;
    newSelectionPrefix?: ReactNode;
    options: Option[];
    paginationText?: ReactNode;
    renderMenuItemChildren: RenderMenuItemChildren;
    text: string;
}
declare const TypeaheadMenu: {
    (props: TypeaheadMenuProps): JSX.Element;
    propTypes: {
        newSelectionPrefix: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        paginationText: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        renderMenuItemChildren: PropTypes.Requireable<(...args: any[]) => any>;
    };
    defaultProps: {
        newSelectionPrefix: string;
        paginationText: string;
        renderMenuItemChildren: (option: Option, props: TypeaheadMenuProps) => JSX.Element;
    };
};
export default TypeaheadMenu;
