/// <reference types="react" />
import { TypeaheadManagerProps } from '../types';
declare type Args = Pick<TypeaheadManagerProps, 'activeIndex' | 'id' | 'isFocused' | 'isMenuShown' | 'multiple' | 'onClick' | 'onFocus' | 'placeholder'>;
declare const getInputProps: ({ activeIndex, id, isFocused, isMenuShown, multiple, onClick, onFocus, placeholder, ...props }: Args) => (inputProps?: {}) => {
    onClick: import("react").MouseEventHandler<HTMLInputElement>;
    onFocus: (event: import("react").SyntheticEvent<HTMLInputElement, Event>) => void;
    role: string;
    inputClassName?: string | undefined;
    'aria-activedescendant': string | undefined;
    'aria-autocomplete': string;
    'aria-expanded': boolean;
    'aria-haspopup': string;
    'aria-multiselectable': true | undefined;
    'aria-owns': string | undefined;
    className: string;
    autoComplete: string;
    placeholder: string | undefined;
    type: string;
};
export default getInputProps;
