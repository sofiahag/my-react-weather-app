{"ast":null,"code":"/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font');\nexports.parseFont = parseFont;\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), {\n    width: width,\n    height: height\n  });\n};\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0:\n      return new ImageData();\n    case 1:\n      return new ImageData(array);\n    case 2:\n      return new ImageData(array, width);\n    default:\n      return new ImageData(array, width, height);\n  }\n};\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options);\n    function cleanup() {\n      image.onload = null;\n      image.onerror = null;\n    }\n    image.onload = function () {\n      cleanup();\n      resolve(image);\n    };\n    image.onerror = function () {\n      cleanup();\n      reject(new Error('Failed to load the image \"' + src + '\"'));\n    };\n    image.src = src;\n  });\n};","map":{"version":3,"names":["parseFont","require","exports","createCanvas","width","height","Object","assign","document","createElement","createImageData","array","arguments","length","ImageData","loadImage","src","options","Promise","resolve","reject","image","cleanup","onload","onerror","Error"],"sources":["/Users/Fia/opt/my-react-weather-app/node_modules/canvas/browser.js"],"sourcesContent":["/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAE7CC,OAAO,CAACF,SAAS,GAAGA,SAAS;AAE7BE,OAAO,CAACC,YAAY,GAAG,UAAUC,KAAK,EAAEC,MAAM,EAAE;EAC9C,OAAOC,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,EAAE;IAAEL,KAAK,EAAEA,KAAK;IAAEC,MAAM,EAAEA;EAAO,CAAC,CAAC;AAC1F,CAAC;AAEDH,OAAO,CAACQ,eAAe,GAAG,UAAUC,KAAK,EAAEP,KAAK,EAAEC,MAAM,EAAE;EACxD;EACA,QAAQO,SAAS,CAACC,MAAM;IACtB,KAAK,CAAC;MAAE,OAAO,IAAIC,SAAS,CAAC,CAAC;IAC9B,KAAK,CAAC;MAAE,OAAO,IAAIA,SAAS,CAACH,KAAK,CAAC;IACnC,KAAK,CAAC;MAAE,OAAO,IAAIG,SAAS,CAACH,KAAK,EAAEP,KAAK,CAAC;IAC1C;MAAS,OAAO,IAAIU,SAAS,CAACH,KAAK,EAAEP,KAAK,EAAEC,MAAM,CAAC;EACrD;AACF,CAAC;AAEDH,OAAO,CAACa,SAAS,GAAG,UAAUC,GAAG,EAAEC,OAAO,EAAE;EAC1C,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C,MAAMC,KAAK,GAAGf,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,EAAEQ,OAAO,CAAC;IAEnE,SAASK,OAAOA,CAAA,EAAI;MAClBD,KAAK,CAACE,MAAM,GAAG,IAAI;MACnBF,KAAK,CAACG,OAAO,GAAG,IAAI;IACtB;IAEAH,KAAK,CAACE,MAAM,GAAG,YAAY;MAAED,OAAO,CAAC,CAAC;MAAEH,OAAO,CAACE,KAAK,CAAC;IAAC,CAAC;IACxDA,KAAK,CAACG,OAAO,GAAG,YAAY;MAAEF,OAAO,CAAC,CAAC;MAAEF,MAAM,CAAC,IAAIK,KAAK,CAAC,4BAA4B,GAAGT,GAAG,GAAG,GAAG,CAAC,CAAC;IAAC,CAAC;IAEtGK,KAAK,CAACL,GAAG,GAAGA,GAAG;EACjB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}