{"ast":null,"code":"import isEqual from 'fast-deep-equal';\nimport getOptionProperty from './getOptionProperty';\nimport { isFunction, isString } from './nodash';\nimport stripDiacritics from './stripDiacritics';\nimport warn from './warn';\nfunction isMatch(input, string, props) {\n  var searchStr = input;\n  var str = string;\n  if (!props.caseSensitive) {\n    searchStr = searchStr.toLowerCase();\n    str = str.toLowerCase();\n  }\n  if (props.ignoreDiacritics) {\n    searchStr = stripDiacritics(searchStr);\n    str = stripDiacritics(str);\n  }\n  return str.indexOf(searchStr) !== -1;\n}\n/**\n * Default algorithm for filtering results.\n */\n\nexport default function defaultFilterBy(option, props) {\n  var filterBy = props.filterBy,\n    labelKey = props.labelKey,\n    multiple = props.multiple,\n    selected = props.selected,\n    text = props.text; // Don't show selected options in the menu for the multi-select case.\n\n  if (multiple && selected.some(function (o) {\n    return isEqual(o, option);\n  })) {\n    return false;\n  }\n  if (isFunction(labelKey)) {\n    return isMatch(text, labelKey(option), props);\n  }\n  var fields = filterBy.slice();\n  if (isString(labelKey)) {\n    // Add the `labelKey` field to the list of fields if it isn't already there.\n    if (fields.indexOf(labelKey) === -1) {\n      fields.unshift(labelKey);\n    }\n  }\n  if (isString(option)) {\n    warn(fields.length <= 1, 'You cannot filter by properties when `option` is a string.');\n    return isMatch(text, option, props);\n  }\n  return fields.some(function (field) {\n    var value = getOptionProperty(option, field);\n    if (!isString(value)) {\n      warn(false, 'Fields passed to `filterBy` should have string values. Value will ' + 'be converted to a string; results may be unexpected.');\n      value = String(value);\n    }\n    return isMatch(text, value, props);\n  });\n}","map":{"version":3,"names":["isEqual","getOptionProperty","isFunction","isString","stripDiacritics","warn","isMatch","input","string","props","searchStr","str","caseSensitive","toLowerCase","ignoreDiacritics","indexOf","defaultFilterBy","option","filterBy","labelKey","multiple","selected","text","some","o","fields","slice","unshift","length","field","value","String"],"sources":["/Users/Fia/opt/my-react-weather-app/node_modules/react-bootstrap-typeahead/es/utils/defaultFilterBy.js"],"sourcesContent":["import isEqual from 'fast-deep-equal';\nimport getOptionProperty from './getOptionProperty';\nimport { isFunction, isString } from './nodash';\nimport stripDiacritics from './stripDiacritics';\nimport warn from './warn';\n\nfunction isMatch(input, string, props) {\n  var searchStr = input;\n  var str = string;\n\n  if (!props.caseSensitive) {\n    searchStr = searchStr.toLowerCase();\n    str = str.toLowerCase();\n  }\n\n  if (props.ignoreDiacritics) {\n    searchStr = stripDiacritics(searchStr);\n    str = stripDiacritics(str);\n  }\n\n  return str.indexOf(searchStr) !== -1;\n}\n/**\n * Default algorithm for filtering results.\n */\n\n\nexport default function defaultFilterBy(option, props) {\n  var filterBy = props.filterBy,\n      labelKey = props.labelKey,\n      multiple = props.multiple,\n      selected = props.selected,\n      text = props.text; // Don't show selected options in the menu for the multi-select case.\n\n  if (multiple && selected.some(function (o) {\n    return isEqual(o, option);\n  })) {\n    return false;\n  }\n\n  if (isFunction(labelKey)) {\n    return isMatch(text, labelKey(option), props);\n  }\n\n  var fields = filterBy.slice();\n\n  if (isString(labelKey)) {\n    // Add the `labelKey` field to the list of fields if it isn't already there.\n    if (fields.indexOf(labelKey) === -1) {\n      fields.unshift(labelKey);\n    }\n  }\n\n  if (isString(option)) {\n    warn(fields.length <= 1, 'You cannot filter by properties when `option` is a string.');\n    return isMatch(text, option, props);\n  }\n\n  return fields.some(function (field) {\n    var value = getOptionProperty(option, field);\n\n    if (!isString(value)) {\n      warn(false, 'Fields passed to `filterBy` should have string values. Value will ' + 'be converted to a string; results may be unexpected.');\n      value = String(value);\n    }\n\n    return isMatch(text, value, props);\n  });\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;AACrC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,UAAU;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,QAAQ;AAEzB,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAE;EACrC,IAAIC,SAAS,GAAGH,KAAK;EACrB,IAAII,GAAG,GAAGH,MAAM;EAEhB,IAAI,CAACC,KAAK,CAACG,aAAa,EAAE;IACxBF,SAAS,GAAGA,SAAS,CAACG,WAAW,CAAC,CAAC;IACnCF,GAAG,GAAGA,GAAG,CAACE,WAAW,CAAC,CAAC;EACzB;EAEA,IAAIJ,KAAK,CAACK,gBAAgB,EAAE;IAC1BJ,SAAS,GAAGN,eAAe,CAACM,SAAS,CAAC;IACtCC,GAAG,GAAGP,eAAe,CAACO,GAAG,CAAC;EAC5B;EAEA,OAAOA,GAAG,CAACI,OAAO,CAACL,SAAS,CAAC,KAAK,CAAC,CAAC;AACtC;AACA;AACA;AACA;;AAGA,eAAe,SAASM,eAAeA,CAACC,MAAM,EAAER,KAAK,EAAE;EACrD,IAAIS,QAAQ,GAAGT,KAAK,CAACS,QAAQ;IACzBC,QAAQ,GAAGV,KAAK,CAACU,QAAQ;IACzBC,QAAQ,GAAGX,KAAK,CAACW,QAAQ;IACzBC,QAAQ,GAAGZ,KAAK,CAACY,QAAQ;IACzBC,IAAI,GAAGb,KAAK,CAACa,IAAI,CAAC,CAAC;;EAEvB,IAAIF,QAAQ,IAAIC,QAAQ,CAACE,IAAI,CAAC,UAAUC,CAAC,EAAE;IACzC,OAAOxB,OAAO,CAACwB,CAAC,EAAEP,MAAM,CAAC;EAC3B,CAAC,CAAC,EAAE;IACF,OAAO,KAAK;EACd;EAEA,IAAIf,UAAU,CAACiB,QAAQ,CAAC,EAAE;IACxB,OAAOb,OAAO,CAACgB,IAAI,EAAEH,QAAQ,CAACF,MAAM,CAAC,EAAER,KAAK,CAAC;EAC/C;EAEA,IAAIgB,MAAM,GAAGP,QAAQ,CAACQ,KAAK,CAAC,CAAC;EAE7B,IAAIvB,QAAQ,CAACgB,QAAQ,CAAC,EAAE;IACtB;IACA,IAAIM,MAAM,CAACV,OAAO,CAACI,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MACnCM,MAAM,CAACE,OAAO,CAACR,QAAQ,CAAC;IAC1B;EACF;EAEA,IAAIhB,QAAQ,CAACc,MAAM,CAAC,EAAE;IACpBZ,IAAI,CAACoB,MAAM,CAACG,MAAM,IAAI,CAAC,EAAE,4DAA4D,CAAC;IACtF,OAAOtB,OAAO,CAACgB,IAAI,EAAEL,MAAM,EAAER,KAAK,CAAC;EACrC;EAEA,OAAOgB,MAAM,CAACF,IAAI,CAAC,UAAUM,KAAK,EAAE;IAClC,IAAIC,KAAK,GAAG7B,iBAAiB,CAACgB,MAAM,EAAEY,KAAK,CAAC;IAE5C,IAAI,CAAC1B,QAAQ,CAAC2B,KAAK,CAAC,EAAE;MACpBzB,IAAI,CAAC,KAAK,EAAE,oEAAoE,GAAG,sDAAsD,CAAC;MAC1IyB,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC;IACvB;IAEA,OAAOxB,OAAO,CAACgB,IAAI,EAAEQ,KAAK,EAAErB,KAAK,CAAC;EACpC,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}