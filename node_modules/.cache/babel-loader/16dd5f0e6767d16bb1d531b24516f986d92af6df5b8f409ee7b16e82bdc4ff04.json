{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React from 'react';\nimport { Image, processColor } from 'react-native';\nimport NativeLottieAnimationView, { Commands } from './specs/LottieAnimationViewNativeComponent';\nconst defaultProps = {\n  source: undefined,\n  progress: 0,\n  speed: 1,\n  loop: true,\n  autoPlay: false,\n  enableMergePathsAndroidForKitKatAndAbove: false,\n  cacheComposition: true,\n  useNativeLooping: false,\n  resizeMode: 'contain',\n  colorFilters: [],\n  textFiltersAndroid: [],\n  textFiltersIOS: []\n};\nexport class LottieView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"onAnimationFinish\", evt => {\n      var _this$props$onAnimati, _this$props;\n      (_this$props$onAnimati = (_this$props = this.props).onAnimationFinish) === null || _this$props$onAnimati === void 0 ? void 0 : _this$props$onAnimati.call(_this$props, evt.nativeEvent.isCancelled);\n    });\n    _defineProperty(this, \"onAnimationFailure\", evt => {\n      var _this$props$onAnimati2, _this$props2;\n      (_this$props$onAnimati2 = (_this$props2 = this.props).onAnimationFailure) === null || _this$props$onAnimati2 === void 0 ? void 0 : _this$props$onAnimati2.call(_this$props2, evt.nativeEvent.error);\n    });\n    this.play = this.play.bind(this);\n    this.reset = this.reset.bind(this);\n    this.pause = this.pause.bind(this);\n    this.resume = this.resume.bind(this);\n    this.onAnimationFinish = this.onAnimationFinish.bind(this);\n    this.captureRef = this.captureRef.bind(this);\n  }\n  play(startFrame, endFrame) {\n    Commands.play(this.lottieAnimationViewRef, startFrame ?? -1, endFrame ?? -1);\n  }\n  reset() {\n    Commands.reset(this.lottieAnimationViewRef);\n  }\n  pause() {\n    Commands.pause(this.lottieAnimationViewRef);\n  }\n  resume() {\n    Commands.resume(this.lottieAnimationViewRef);\n  }\n  captureRef(ref) {\n    if (ref === null) {\n      return;\n    }\n    this.lottieAnimationViewRef = ref;\n    if (this.props.autoPlay === true) {\n      this.play();\n    }\n  }\n  parsePossibleSources() {\n    const {\n      source\n    } = this.props;\n    if (typeof source === 'string') {\n      return {\n        sourceName: source\n      };\n    }\n    if (typeof source === 'object' && !source.uri) {\n      return {\n        sourceJson: JSON.stringify(source)\n      };\n    }\n    if (typeof source === 'object' && source.uri) {\n      // uri contains .lottie extension return sourceDotLottieURI\n      if (source.uri.includes('.lottie')) {\n        return {\n          sourceDotLottieURI: source.uri\n        };\n      }\n      return {\n        sourceURL: source.uri\n      };\n    }\n    if (typeof source === 'number') {\n      return {\n        sourceDotLottieURI: Image.resolveAssetSource(source).uri\n      };\n    }\n    return undefined;\n  }\n  render() {\n    var _this$props$colorFilt;\n    const {\n      style,\n      source,\n      autoPlay,\n      duration,\n      textFiltersAndroid,\n      textFiltersIOS,\n      resizeMode,\n      ...rest\n    } = this.props;\n    const sources = this.parsePossibleSources();\n    const speed = duration && sources.sourceJson && source.fr ? Math.round(source.op / source.fr * 1000 / duration) : this.props.speed;\n    const colorFilters = (_this$props$colorFilt = this.props.colorFilters) === null || _this$props$colorFilt === void 0 ? void 0 : _this$props$colorFilt.map(colorFilter => ({\n      ...colorFilter,\n      color: processColor(colorFilter.color)\n    }));\n    return /*#__PURE__*/React.createElement(NativeLottieAnimationView, _extends({\n      ref: this.captureRef\n    }, rest, {\n      colorFilters: colorFilters,\n      textFiltersAndroid: textFiltersAndroid,\n      textFiltersIOS: textFiltersIOS,\n      speed: speed,\n      style: style,\n      onAnimationFinish: this.onAnimationFinish,\n      onAnimationFailure: this.onAnimationFailure,\n      autoPlay: autoPlay,\n      resizeMode: resizeMode\n    }, sources));\n  }\n}\n_defineProperty(LottieView, \"defaultProps\", defaultProps);","map":{"version":3,"names":["React","Image","processColor","NativeLottieAnimationView","Commands","defaultProps","source","undefined","progress","speed","loop","autoPlay","enableMergePathsAndroidForKitKatAndAbove","cacheComposition","useNativeLooping","resizeMode","colorFilters","textFiltersAndroid","textFiltersIOS","LottieView","PureComponent","constructor","props","_defineProperty","evt","_this$props$onAnimati","_this$props","onAnimationFinish","call","nativeEvent","isCancelled","_this$props$onAnimati2","_this$props2","onAnimationFailure","error","play","bind","reset","pause","resume","captureRef","startFrame","endFrame","lottieAnimationViewRef","ref","parsePossibleSources","sourceName","uri","sourceJson","JSON","stringify","includes","sourceDotLottieURI","sourceURL","resolveAssetSource","render","_this$props$colorFilt","style","duration","rest","sources","fr","Math","round","op","map","colorFilter","color","createElement","_extends"],"sources":["/Users/Fia/opt/my-react-weather-app/node_modules/lottie-react-native/src/LottieView.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Image,\n  NativeSyntheticEvent,\n  ViewProps,\n  processColor,\n} from 'react-native';\n\nimport type { LottieViewProps } from './LottieView.types';\n\nimport NativeLottieAnimationView, {\n  Commands,\n} from './specs/LottieAnimationViewNativeComponent';\n\ntype Props = LottieViewProps & { containerProps?: ViewProps };\n\nconst defaultProps: Props = {\n  source: undefined,\n  progress: 0,\n  speed: 1,\n  loop: true,\n  autoPlay: false,\n  enableMergePathsAndroidForKitKatAndAbove: false,\n  cacheComposition: true,\n  useNativeLooping: false,\n  resizeMode: 'contain',\n  colorFilters: [],\n  textFiltersAndroid: [],\n  textFiltersIOS: [],\n};\n\nexport class LottieView extends React.PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  private lottieAnimationViewRef:\n    | React.ElementRef<typeof NativeLottieAnimationView>\n    | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.play = this.play.bind(this);\n    this.reset = this.reset.bind(this);\n    this.pause = this.pause.bind(this);\n    this.resume = this.resume.bind(this);\n    this.onAnimationFinish = this.onAnimationFinish.bind(this);\n    this.captureRef = this.captureRef.bind(this);\n  }\n\n  play(startFrame?: number, endFrame?: number): void {\n    Commands.play(\n      this.lottieAnimationViewRef,\n      startFrame ?? -1,\n      endFrame ?? -1,\n    );\n  }\n\n  reset() {\n    Commands.reset(this.lottieAnimationViewRef);\n  }\n\n  pause() {\n    Commands.pause(this.lottieAnimationViewRef);\n  }\n\n  resume() {\n    Commands.resume(this.lottieAnimationViewRef);\n  }\n\n  private onAnimationFinish = (\n    evt: NativeSyntheticEvent<{ isCancelled: boolean }>,\n  ) => {\n    this.props.onAnimationFinish?.(evt.nativeEvent.isCancelled);\n  };\n\n  private onAnimationFailure = (\n    evt: NativeSyntheticEvent<{ error: string }>,\n  ) => {\n    this.props.onAnimationFailure?.(evt.nativeEvent.error);\n  };\n\n  private captureRef(ref: React.ElementRef<typeof NativeLottieAnimationView>) {\n    if (ref === null) {\n      return;\n    }\n\n    this.lottieAnimationViewRef = ref;\n    if (this.props.autoPlay === true) {\n      this.play();\n    }\n  }\n\n  private parsePossibleSources():\n    | {\n        sourceURL?: string;\n        sourceJson?: string;\n        sourceName?: string;\n        sourceDotLottieURI?: string;\n      }\n    | undefined {\n    const { source } = this.props;\n\n    if (typeof source === 'string') {\n      return { sourceName: source };\n    }\n\n    if (typeof source === 'object' && !(source as any).uri) {\n      return { sourceJson: JSON.stringify(source) };\n    }\n\n    if (typeof source === 'object' && (source as any).uri) {\n      // uri contains .lottie extension return sourceDotLottieURI\n      if ((source as any).uri.includes('.lottie')) {\n        return { sourceDotLottieURI: (source as any).uri };\n      }\n\n      return { sourceURL: (source as any).uri };\n    }\n\n    if (typeof source === 'number') {\n      return { sourceDotLottieURI: Image.resolveAssetSource(source).uri };\n    }\n\n    return undefined;\n  }\n\n  render(): React.ReactNode {\n    const {\n      style,\n      source,\n      autoPlay,\n      duration,\n      textFiltersAndroid,\n      textFiltersIOS,\n      resizeMode,\n      ...rest\n    } = this.props;\n\n    const sources = this.parsePossibleSources();\n\n    const speed =\n      duration && sources.sourceJson && (source as any).fr\n        ? Math.round(\n            (((source as any).op / (source as any).fr) * 1000) / duration,\n          )\n        : this.props.speed;\n\n    const colorFilters = this.props.colorFilters?.map((colorFilter) => ({\n      ...colorFilter,\n      color: processColor(colorFilter.color),\n    }));\n\n    return (\n      <NativeLottieAnimationView\n        ref={this.captureRef}\n        {...rest}\n        colorFilters={colorFilters}\n        textFiltersAndroid={textFiltersAndroid}\n        textFiltersIOS={textFiltersIOS}\n        speed={speed}\n        style={style}\n        onAnimationFinish={this.onAnimationFinish}\n        onAnimationFailure={this.onAnimationFailure}\n        autoPlay={autoPlay}\n        resizeMode={resizeMode}\n        {...sources}\n      />\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,EAGLC,YAAY,QACP,cAAc;AAIrB,OAAOC,yBAAyB,IAC9BC,QAAQ,QACH,4CAA4C;AAInD,MAAMC,YAAmB,GAAG;EAC1BC,MAAM,EAAEC,SAAS;EACjBC,QAAQ,EAAE,CAAC;EACXC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE,KAAK;EACfC,wCAAwC,EAAE,KAAK;EAC/CC,gBAAgB,EAAE,IAAI;EACtBC,gBAAgB,EAAE,KAAK;EACvBC,UAAU,EAAE,SAAS;EACrBC,YAAY,EAAE,EAAE;EAChBC,kBAAkB,EAAE,EAAE;EACtBC,cAAc,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,UAAU,SAASnB,KAAK,CAACoB,aAAa,CAAY;EAO7DC,WAAWA,CAACC,KAAY,EAAE;IACxB,KAAK,CAACA,KAAK,CAAC;IAACC,eAAA,4BA8BbC,GAAmD,IAChD;MAAA,IAAAC,qBAAA,EAAAC,WAAA;MACH,CAAAD,qBAAA,IAAAC,WAAA,OAAI,CAACJ,KAAK,EAACK,iBAAiB,cAAAF,qBAAA,uBAA5BA,qBAAA,CAAAG,IAAA,CAAAF,WAAA,EAA+BF,GAAG,CAACK,WAAW,CAACC,WAAW,CAAC;IAC7D,CAAC;IAAAP,eAAA,6BAGCC,GAA4C,IACzC;MAAA,IAAAO,sBAAA,EAAAC,YAAA;MACH,CAAAD,sBAAA,IAAAC,YAAA,OAAI,CAACV,KAAK,EAACW,kBAAkB,cAAAF,sBAAA,uBAA7BA,sBAAA,CAAAH,IAAA,CAAAI,YAAA,EAAgCR,GAAG,CAACK,WAAW,CAACK,KAAK,CAAC;IACxD,CAAC;IAtCC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACD,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACE,KAAK,GAAG,IAAI,CAACA,KAAK,CAACF,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACG,MAAM,GAAG,IAAI,CAACA,MAAM,CAACH,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACT,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACS,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACI,UAAU,GAAG,IAAI,CAACA,UAAU,CAACJ,IAAI,CAAC,IAAI,CAAC;EAC9C;EAEAD,IAAIA,CAACM,UAAmB,EAAEC,QAAiB,EAAQ;IACjDtC,QAAQ,CAAC+B,IAAI,CACX,IAAI,CAACQ,sBAAsB,EAC3BF,UAAU,IAAI,CAAC,CAAC,EAChBC,QAAQ,IAAI,CAAC,CACf,CAAC;EACH;EAEAL,KAAKA,CAAA,EAAG;IACNjC,QAAQ,CAACiC,KAAK,CAAC,IAAI,CAACM,sBAAsB,CAAC;EAC7C;EAEAL,KAAKA,CAAA,EAAG;IACNlC,QAAQ,CAACkC,KAAK,CAAC,IAAI,CAACK,sBAAsB,CAAC;EAC7C;EAEAJ,MAAMA,CAAA,EAAG;IACPnC,QAAQ,CAACmC,MAAM,CAAC,IAAI,CAACI,sBAAsB,CAAC;EAC9C;EAcQH,UAAUA,CAACI,GAAuD,EAAE;IAC1E,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChB;IACF;IAEA,IAAI,CAACD,sBAAsB,GAAGC,GAAG;IACjC,IAAI,IAAI,CAACtB,KAAK,CAACX,QAAQ,KAAK,IAAI,EAAE;MAChC,IAAI,CAACwB,IAAI,CAAC,CAAC;IACb;EACF;EAEQU,oBAAoBA,CAAA,EAOd;IACZ,MAAM;MAAEvC;IAAO,CAAC,GAAG,IAAI,CAACgB,KAAK;IAE7B,IAAI,OAAOhB,MAAM,KAAK,QAAQ,EAAE;MAC9B,OAAO;QAAEwC,UAAU,EAAExC;MAAO,CAAC;IAC/B;IAEA,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAI,CAAEA,MAAM,CAASyC,GAAG,EAAE;MACtD,OAAO;QAAEC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC5C,MAAM;MAAE,CAAC;IAC/C;IAEA,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAKA,MAAM,CAASyC,GAAG,EAAE;MACrD;MACA,IAAKzC,MAAM,CAASyC,GAAG,CAACI,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC3C,OAAO;UAAEC,kBAAkB,EAAG9C,MAAM,CAASyC;QAAI,CAAC;MACpD;MAEA,OAAO;QAAEM,SAAS,EAAG/C,MAAM,CAASyC;MAAI,CAAC;IAC3C;IAEA,IAAI,OAAOzC,MAAM,KAAK,QAAQ,EAAE;MAC9B,OAAO;QAAE8C,kBAAkB,EAAEnD,KAAK,CAACqD,kBAAkB,CAAChD,MAAM,CAAC,CAACyC;MAAI,CAAC;IACrE;IAEA,OAAOxC,SAAS;EAClB;EAEAgD,MAAMA,CAAA,EAAoB;IAAA,IAAAC,qBAAA;IACxB,MAAM;MACJC,KAAK;MACLnD,MAAM;MACNK,QAAQ;MACR+C,QAAQ;MACRzC,kBAAkB;MAClBC,cAAc;MACdH,UAAU;MACV,GAAG4C;IACL,CAAC,GAAG,IAAI,CAACrC,KAAK;IAEd,MAAMsC,OAAO,GAAG,IAAI,CAACf,oBAAoB,CAAC,CAAC;IAE3C,MAAMpC,KAAK,GACTiD,QAAQ,IAAIE,OAAO,CAACZ,UAAU,IAAK1C,MAAM,CAASuD,EAAE,GAChDC,IAAI,CAACC,KAAK,CACLzD,MAAM,CAAS0D,EAAE,GAAI1D,MAAM,CAASuD,EAAE,GAAI,IAAI,GAAIH,QACvD,CAAC,GACD,IAAI,CAACpC,KAAK,CAACb,KAAK;IAEtB,MAAMO,YAAY,IAAAwC,qBAAA,GAAG,IAAI,CAAClC,KAAK,CAACN,YAAY,cAAAwC,qBAAA,uBAAvBA,qBAAA,CAAyBS,GAAG,CAAEC,WAAW,KAAM;MAClE,GAAGA,WAAW;MACdC,KAAK,EAAEjE,YAAY,CAACgE,WAAW,CAACC,KAAK;IACvC,CAAC,CAAC,CAAC;IAEH,oBACEnE,KAAA,CAAAoE,aAAA,CAACjE,yBAAyB,EAAAkE,QAAA;MACxBzB,GAAG,EAAE,IAAI,CAACJ;IAAW,GACjBmB,IAAI;MACR3C,YAAY,EAAEA,YAAa;MAC3BC,kBAAkB,EAAEA,kBAAmB;MACvCC,cAAc,EAAEA,cAAe;MAC/BT,KAAK,EAAEA,KAAM;MACbgD,KAAK,EAAEA,KAAM;MACb9B,iBAAiB,EAAE,IAAI,CAACA,iBAAkB;MAC1CM,kBAAkB,EAAE,IAAI,CAACA,kBAAmB;MAC5CtB,QAAQ,EAAEA,QAAS;MACnBI,UAAU,EAAEA;IAAW,GACnB6C,OAAO,CACZ,CAAC;EAEN;AACF;AAACrC,eAAA,CAzIYJ,UAAU,kBACCd,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}